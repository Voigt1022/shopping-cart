{"version":3,"sources":["Component/DashBoard/SizePick.js","Component/DashBoard/Product.js","Component/DashBoard/DashBoard.js","Component/Appbar/Cart/ShoppingList.js","Component/Appbar/Cart/SideList.js","Component/Appbar/Cart/Cart.js","Component/Appbar/User/Login.js","Component/Appbar/User/Logout.js","Component/Appbar/Appbar.js","Component/FireBase.js","Component/Selection.js","App.js","serviceWorker.js","index.js"],"names":["sizelist","useStyles","makeStyles","outofstockbutton","width","color","backgroundColor","SizePick","product","setAnchorEl","setSelectedsize","size","selection","classes","Object","keys","length","sku","Button","className","disabled","map","si","key","selected","some","x","onClick","card","height","root","display","flexDirection","alignItems","addbutton","Product","drawerstate","user","useState","anchorEl","selectedsize","popover","useRef","formattedPrice","currency","toFixed","replace","formatPrice","price","currencyId","Card","variant","margin-block","title","CardMedia","component","image","Typography","description","align","currencyFormat","substr","Divider","ref","Popover","open","current","onClose","anchorOrigin","vertical","horizontal","transformOrigin","setState","addToggle","margin","DashBoard","products","Grid","container","spacing","item","shoppinglist","props","overflow","cardcontent","minWidth","cardmedia","marginTop","marginLeft","clearbutton","adjustbutton","checkoutbuttonself","fontSize","totalCost","ShoppingList","forEach","useEffect","alert","firebase","database","child","uid","set","setSelected","checkout","Fragment","alt","CardContent","IconButton","deleteToggle","decreaseToggle","transaction","amount","value","list","cartbutton","SideList","totalNum","xs","aira-label","Badge","badgeContent","Cart","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","Drawer","anchor","state","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","Login","firebaseAuth","Logout","carts","hasOwnProperty","temp","tempselected","pos","findIndex","concat","newselected","carthandle","displayName","signOut","appbar","flexGrow","Appbar","AppBar","position","Toolbar","href","src","FireBase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","Selection","quan","assign","filter","App","data","setData","setUser","onAuthStateChanged","a","fetch","responseData","json","resData","values","fetchProducts","handleData","snap","val","on","error","off","Container","maxWidth","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.22d06a05.chunk.js","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst sizelist = ['S', 'M', 'L', 'XL']\n\nconst useStyles = makeStyles({\n  outofstockbutton: {\n    width: 250,\n    color: 'white',\n    backgroundColor: \"gray\"\n  }\n});\n\nconst SizePick = ({ product, setAnchorEl, setSelectedsize, size, selection }) => {\n  const classes = useStyles();\n\n  return (\n    (Object.keys(size).length !== 0 && size[product.sku]['S'] === 0 && size[product.sku]['M'] === 0 && size[product.sku]['L'] === 0 && size[product.sku]['XL'] === 0) ?\n      <Button className={classes.outofstockbutton} disabled={true}>Out of Stock</Button> :\n      sizelist.map(si =>\n        <Button\n          key={si}\n          disabled={size[product.sku][si] === 0 || selection.selected.some(x => x.sku === product.sku && x.size === si && x[si] >= size[product.sku][si])}\n          onClick={() => {\n            setSelectedsize(si);\n            setAnchorEl(false);\n          }}\n        >\n          {si}\n        </Button>\n      )\n  )\n}\n\n\n\nexport default SizePick;","import React, { useState, useRef } from 'react'\n\nimport { Card, CardMedia, CardContent, CardActionArea } from '@material-ui/core';\nimport { Button, Typography, Popover } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider'\n\nimport SizePick from './SizePick'\n\n\nconst useStyles = makeStyles({\n  card: {\n    width: 350,\n    height: 730\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  addbutton: {\n    backgroundColor: 'black',\n    color: 'white',\n    width: 250,\n    '&:hover': { backgroundColor: 'gray' }\n  },\n  size: {\n    width: 100,\n    height: 36,\n    color: 'black',\n    '&:hover': { backgroundColor: 'white' }\n  },\n  outofstockbutton: {\n    width: 250,\n    color: 'white',\n    backgroundColor: \"gray\"\n  }\n});\n\nconst formatPrice = (x, currency) => {\n  switch (currency) {\n    case 'BRL':\n      return x.toFixed(2).replace('.', ',');\n    default:\n      return x.toFixed(2);\n  }\n};\n\nconst Product = ({ product, drawerstate, selection, size, user }) => {\n  const [anchorEl, setAnchorEl] = useState(false);\n  const [selectedsize, setSelectedsize] = useState('');\n  const popover = useRef();\n  const classes = useStyles();\n\n  let formattedPrice = formatPrice(product.price, product.currencyId);\n\n  return (\n    <Card variant=\"outlined\" className={classes.card}>\n      <h2 margin-block=\"0\">{product.title}</h2>\n      <CardMedia\n        component=\"img\"\n        image={\"data/products/\" + product.sku + \"_1.jpg\"}\n      />\n      <Typography >\n        <big>\"{product.description}\"</big>\n      </Typography>\n      <Typography align=\"center\">\n        <small>{product.currencyFormat + ' '}</small>\n        <big >{formattedPrice.substr(0, formattedPrice.length - 3)}</big>\n        <small>{formattedPrice.substr(formattedPrice.length - 3, 3)}</small>\n      </Typography>\n      <Divider />\n      <div className={classes.root}>\n        <Button\n          className={classes.size}\n          ref={popover}\n          onClick={() => setAnchorEl(true)}\n        >\n          {selectedsize}\n        </Button>\n        <Popover\n          open={anchorEl}\n          anchorEl={popover.current}\n          onClose={() => {\n            setAnchorEl(false);\n          }}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          <SizePick product={product} setAnchorEl={setAnchorEl} setSelectedsize={setSelectedsize} size={size} selection={selection} />\n        </Popover>\n        <Button\n          className={classes.addbutton}\n          disabled={(selectedsize !== '' && size[product.sku][selectedsize] === 0) || selection.selected.some(x => x.sku === product.sku && x.size === selectedsize && x[selectedsize] >= size[product.sku][selectedsize])}\n          onClick={() => {\n            if (selectedsize === '') {\n              setAnchorEl(true);\n            }\n            else {\n              drawerstate.setState(true);\n              selection.addToggle(product, selectedsize, user);\n            }\n          }}\n        >\n          Pick Size & Add to Cart\n          </Button>\n      </div>\n    </Card>\n  )\n}\n\nexport default Product;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Product from './Product'\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 10\n  }\n});\n\nconst DashBoard = ({ products, drawerstate, selection, size, user }) => {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      className={classes.root}\n      spacing={3}\n    >\n      {products.map(product =>\n        <Grid item key={product.sku}>\n          <Product\n            product={product}\n            drawerstate={drawerstate}\n            selection={selection}\n            size={size}\n            user={user} />\n        </Grid>\n      )\n      }\n    </Grid>\n  );\n};\n\nexport default DashBoard;","import React, { useState, useEffect, useLayoutEffect } from 'react'\n// @material-ui\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Divider from '@material-ui/core/Divider'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Button from '@material-ui/core/Button';\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst useStyles = makeStyles({\n  shoppinglist: {\n    height: props => props.height - 190,\n    overflow: 'auto',\n  },\n  card: {\n    display: 'flex',\n  },\n  cardcontent: {\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: 200,\n  },\n  cardmedia: {\n    width: 49.5,\n    height: 72,\n    marginTop: 18,\n    marginLeft: 5,\n  },\n  clearbutton: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 15,\n    marginLeft: 60\n  },\n  adjustbutton: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 45,\n    marginLeft: -26\n  },\n  checkoutbuttonself: {\n    marginTop: 10,\n    fontSize: 20,\n    width: 250,\n    backgroundColor: props => props.totalCost ? 'black' : 'white',\n    color: 'white',\n    '&:hover': { backgroundColor: 'black' }\n  }\n});\n\nconst ShoppingList = ({ selection, size, user, height }) => {\n  let totalCost = 0;\n  if (selection.selected.length >= 1) {\n    selection.selected.forEach(item => totalCost = totalCost + item[item.size] * item.price);\n  }\n  const classes = useStyles({ totalCost, height });\n\n  useEffect(() => {\n    const notification = () => {\n      selection.selected.forEach(item => {\n        if (size[item.sku][item.size] === 0) {\n          alert(`The item ${item.title} you selected is unavailable, please remove it`)\n          item[item.size] = 0;\n        }\n        else if (item[item.size] > size[item.sku][item.size]) {\n          alert(`The amount of the item ${item.title} you selected exceeds the available amount, because someone bought it, so it is adjusted to the maximum amount.`)\n          item[item.size] = size[item.sku][item.size];\n        }\n      })\n      if (user) {\n        firebase.database().ref().child('carts/' + user.uid).set(selection.selected)\n      }\n      selection.setSelected([...selection.selected])\n    }\n    notification();\n  }, [size.checkout])\n\n  return (\n    <React.Fragment>\n      <div className={classes.shoppinglist}>\n        {selection.selected.map(item =>\n          <Card key={item.sku + item.size} className={classes.card}>\n            <CardMedia\n              className={classes.cardmedia}\n              component=\"img\"\n              image={\"data/products/\" + item.sku + \"_1.jpg\"}\n              alt=\"product image\"\n            />\n            <CardContent className={classes.cardcontent}>\n              <Typography variant=\"subtitle2\">\n                {item.title}\n              </Typography>\n              <Typography variant=\"caption\">\n                $ {item.price.toFixed(2)} | size: {item.size}\n              </Typography>\n              <Typography variant=\"caption\">\n                Quantity: {item[item.size]}\n              </Typography>\n              <Typography variant=\"caption\">\n                Price: $ {(item.price * item[item.size]).toFixed(2)}\n              </Typography>\n            </CardContent>\n            <div className={classes.clearbutton}>\n              <IconButton\n                size=\"small\"\n                onClick={() => selection.deleteToggle(item, item.size, user)}\n              >\n                <ClearIcon fontSize=\"small\" />\n              </IconButton>\n              <div className={classes.adjustbutton}>\n                <IconButton\n                  className={classes.addbutton}\n                  size=\"small\"\n                  disabled={item[item.size] >= size[item.sku][item.size]}\n                  onClick={() => selection.addToggle(item, item.size, user)}\n                >\n                  <AddIcon fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  disabled={item[item.size] <= 1}\n                  onClick={() => selection.decreaseToggle(item, item.size, user)}\n                >\n                  <RemoveIcon fontSize=\"small\" />\n                </IconButton>\n              </div>\n            </div>\n          </Card>\n        )}\n      </div>\n      <Divider />\n      <div align=\"center\">\n        <Typography variant=\"h6\">\n          ${totalCost.toFixed(2)}\n        </Typography>\n        <Button\n          disabled={totalCost === 0}\n          className={classes.checkoutbuttonself}\n          onClick={() => {\n            alert(`Subtotal: $ ${totalCost.toFixed(2)}`)\n            selection.selected.forEach(item => {\n              firebase.database().ref().child(item.sku).transaction(amount => { return { ...amount, [item.size]: size[item.sku][item.size] - item[item.size] } })\n            })\n            selection.setSelected([]);\n            if (user) { firebase.database().ref().child('carts/' + user.uid).set([]) }\n            firebase.database().ref().child('checkout').transaction(value => !value);\n          }}\n        >\n          Checkout\n        </Button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ShoppingList;","import React, { useState, useEffect, useLayoutEffect } from 'react'\n// @material-ui\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Divider from '@material-ui/core/Divider'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Badge from '@material-ui/core/Badge';\n\nimport ShoppingList from './ShoppingList'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 380,\n  },\n  cartbutton: {\n    color: 'black'\n  }\n});\n\nconst SideList = ({ drawerstate, selection, size, user, totalNum, height }) => {\n  const classes = useStyles(height);\n\n  return (\n    <div className={classes.list}>\n      <Grid container>\n        <Grid item xs={5}>\n          <IconButton onClick={() => drawerstate.setState(false)} aira-label=\"close shopping cart\">\n            <CloseIcon fontSize=\"large\" />\n          </IconButton>\n        </Grid>\n        <Grid item xs={7}>\n          <IconButton aira-label=\"shopping cart\" disabled={true}>\n            <Badge badgeContent={totalNum} color='secondary'>\n              <ShoppingCartIcon className={classes.cartbutton} fontSize=\"large\" />\n            </Badge>\n          </IconButton>\n        </Grid>\n      </Grid>\n      <Divider />\n      <ShoppingList selection={selection} size={size} user={user} height={height} />\n    </div>\n  );\n};\n\nexport default SideList;","import React,{useState,useLayoutEffect} from 'react'\n\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\nimport SideList from './SideList'\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\nconst Cart = ({drawerstate,selection,size,user}) => {\n  const [width, height] = useWindowSize();\n  let totalNum = 0;\n   if(selection.selected.length>=1){\n     selection.selected.forEach(item=>totalNum=totalNum+item[item.size]);\n   }\n\n  return(\n    <div>\n      <IconButton onClick={() => drawerstate.setState(true)} >\n        <Badge badgeContent={totalNum} color='black'>\n          <ShoppingCartIcon fontSize=\"large\"/>\n        </Badge>\n      </IconButton>\n      <Drawer\n        anchor=\"right\"\n        open={drawerstate.state}\n      >\n      <SideList drawerstate={drawerstate} selection={selection} size={size} user={user} totalNum={totalNum} height={height}/>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default Cart;","import React, { useState, useRef } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover'\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nconst useStyles = makeStyles({\n  popover: {\n    marginTop: 5,\n    marginLeft: -120,\n  },\n});\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\n\nconst Login = () => {\n  const [anchorEl, setAnchorEl] = useState(false);\n  const popover = useRef();\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Button\n        ref={popover}\n        color=\"black\"\n        size=\"large\"\n        onClick={() => setAnchorEl(true)}\n      >\n        Log in\n        </Button>\n      <Popover\n        className={classes.popover}\n        open={anchorEl}\n        anchorEl={popover.current}\n        onClose={() => setAnchorEl(false)}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        <StyledFirebaseAuth\n          uiConfig={uiConfig}\n          firebaseAuth={firebase.auth()}\n        />\n      </Popover>\n    </React.Fragment>\n  )\n}\n\n\n\nexport default Login;","import React, { useState, useEffect, useRef } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover'\n\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst Logout = ({ selection, size, user }) => {\n  const [anchorEl, setAnchorEl] = useState(false);\n  const popover = useRef();\n\n  useEffect(() => {\n    const carthandle = () => {\n      if (size.carts) {\n        if (size.carts.hasOwnProperty(user.uid)) {\n          let temp = size.carts[user.uid];\n          let tempselected = [];\n          temp.forEach(item => {\n            let pos = selection.selected.findIndex(x => x.sku === item.sku && x.size === item.size)\n            if (pos !== -1) {\n              if (selection.selected[pos][item.size] + item[item.size] > size[item.sku][item.size]) {\n                if (size[item.sku][item.size] === 0) { alert(`The item ${item.title} you selected is unavailable, please remove it`) }\n                else { alert(`The amount of the item ${item.title} you selected before log in and in your accout exceeds the available amount, so it is adjusted to the maximum amount.`) }\n                selection.selected[pos][item.size] = size[item.sku][item.size];\n              }\n              else {\n                selection.selected[pos][item.size] = selection.selected[pos][item.size] + item[item.size];\n              }\n            }\n            else {\n              tempselected = tempselected.concat([item]);\n            }\n          })\n          if (tempselected.length >= 1) {\n            let newselected = selection.selected.concat(tempselected)\n            selection.setSelected(newselected);\n            firebase.database().ref().child('carts/' + user.uid).set(newselected)\n          }\n          else {\n            selection.setSelected(selection.selected);\n            firebase.database().ref().child('carts/' + user.uid).set(selection.selected)\n          }\n        }\n        else {\n          firebase.database().ref().child('carts/' + user.uid).set(selection.selected)\n        }\n      }\n      else if (Object.keys(size).length !== 0) {\n        firebase.database().ref().child('carts/' + user.uid).set(selection.selected)\n      }\n    }\n    carthandle();\n  }, [user])\n\n  return (\n    <React.Fragment>\n      <Button\n        ref={popover}\n        color=\"black\"\n        size=\"large\"\n        onClick={() => setAnchorEl(true)}\n      >\n        {user.displayName}\n      </Button>\n      <Popover\n        open={anchorEl}\n        anchorEl={popover.current}\n        onClose={() => setAnchorEl(false)}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        <Button color=\"inherit\" onClick={() => { firebase.auth().signOut(); selection.setSelected([]); }}>\n          Log out\n        </Button>\n      </Popover>\n    </React.Fragment>\n  )\n}\n\nexport default Logout;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport Cart from './Cart/Cart';\nimport Login from './User/Login'\nimport Logout from './User/Logout'\n\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst useStyles = makeStyles({\n  appbar: {\n    backgroundColor: 'white'\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\nconst Appbar = ({ drawerstate, selection, size, user }) => {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.appbar} position=\"static\">\n      <Toolbar>\n        <a href=\"https://github.com/Voigt1022/shopping-cart\">\n          <img src=\"data/github.svg\" height=\"30\" width=\"30\"/>\n        </a>\n        {user ? <Logout selection={selection} size={size} user={user} /> : <Login />}\n        <Typography className={classes.title}/>\n        <Cart drawerstate={drawerstate} selection={selection} size={size} user={user} />\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Appbar;","import FireBase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n// FIREBASE\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA9YK868AqmkMnyzengqpjAD5C0KdwhW58\",\n  authDomain: \"desk-fdcd0.firebaseapp.com\",\n  databaseURL: \"https://desk-fdcd0.firebaseio.com\",\n  projectId: \"desk-fdcd0\",\n  storageBucket: \"desk-fdcd0.appspot.com\",\n  messagingSenderId: \"627222503043\",\n  appId: \"1:627222503043:web:c62a6ec2fc74850afb45b6\",\n  measurementId: \"G-ZB16M0N4NG\"\n};\n\nFireBase.initializeApp(firebaseConfig);\n\nexport default FireBase;","import { useState } from 'react';\n\nimport FireBase from './FireBase'\n\nconst db = FireBase.database().ref();\n\nconst Selection = () => {\n  const [selected, setSelected] = useState([]);\n  const addToggle = (item, si, user) => {\n    if (selected.some(x => x.sku === item.sku && x.size === si)) {\n      let pos = selected.findIndex(x => x.sku === item.sku && x.size === si);\n      selected[pos] = { ...selected[pos], [si]: selected[pos][si] + 1 }\n      setSelected([...selected]);\n      if (user) {\n        db.child('carts/' + user.uid).set(selected);\n      }\n    }\n    else {\n      let quan = { size: si, [si]: 1 }\n      let temp = selected.concat([Object.assign(quan, item)])\n      setSelected(temp);\n      if (user) {\n        db.child('carts/' + user.uid).set(temp);\n      }\n    }\n  }\n  const deleteToggle = (item, si, user) => {\n    let temp = selected.filter(x => x.sku !== item.sku || x.size !== si);\n    setSelected(temp);\n    if (user) {\n      db.child('carts/' + user.uid).set(temp);\n    }\n  }\n  const decreaseToggle = (item, si, user) => {\n    let pos = selected.findIndex(x => x.sku === item.sku && x.size === si);\n    if (selected[pos][si] > 1) {\n      selected[pos] = { ...selected[pos], [si]: selected[pos][si] - 1 }\n      setSelected([...selected]);\n      if (user) {\n        db.child('carts/' + user.uid).set(selected);\n      }\n    }\n  }\n  return [selected, setSelected, addToggle, deleteToggle, decreaseToggle];\n}\n\nexport default Selection;","import React, { useEffect, useState } from 'react';\n\nimport Container from '@material-ui/core/Container';\n\nimport DashBoard from './Component/DashBoard/DashBoard';\nimport Appbar from './Component/Appbar/Appbar'\nimport FireBase from './Component/FireBase'\nimport Selection from './Component/Selection'\n\nconst db = FireBase.database().ref();\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [state, setState] = useState(false);\n  const [selected, setSelected, addToggle, deleteToggle, decreaseToggle] = Selection();\n  const [size, setSize] = useState({});\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    FireBase.auth().onAuthStateChanged(setUser);\n  }, []);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const responseData = await fetch('./data/products.json');\n      const resData = await responseData.json();\n      setData(Object.values(resData));\n    };\n    fetchProducts();\n  }, []);\n\n  useEffect(() => {\n    const handleData = snap => {\n      if (snap.val()) { setSize(snap.val()); }\n    }\n    db.on('value', handleData, error => alert(error));\n    return () => { db.off('value', handleData) };\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Appbar drawerstate={{ state, setState }} selection={{ selected, setSelected, addToggle, deleteToggle, decreaseToggle }} size={size} user={user} />\n      <Container maxWidth='xl'>\n        <DashBoard products={data} drawerstate={{ state, setState }} selection={{ selected, addToggle }} size={size} user={user} />\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}